{"version":3,"file":"static/js/947.1567a6f5.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const API_KEY = '6b6b4d8285a49ce753cf1ed9382a2a8f';\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n    )\n      .then(response => response.json())\n      .then(data => setCast(data.cast))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Cast</h1>\n      <ul>\n        {cast.map(member => (\n          <li key={member.cast_id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${member.profile_path}`}\n              alt={member.name}\n              style={{ width: '10%' }}\n            />\n            <h2>{member.name}</h2>\n            <p>{member.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Cast from '../Cast/Cast.jsx';\nimport Reviews from '../Reviews/Reviews.jsx';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [section, setSection] = useState(null);\n  const API_KEY = '6b6b4d8285a49ce753cf1ed9382a2a8f';\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.json())\n      .then(data => setMovie(data))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div style={{ padding: '25px' }}>\n      <Link to=\"/\">‚Üê Go back</Link>\n      <div style={{ display: 'flex', marginBottom: '25px' }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n          style={{ width: '20%', marginRight: '20px', marginTop: '20px' }}\n        />\n        <div>\n          <h1 style={{ fontWeight: 'bold' }}>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </h1>\n          <p>User Score: {movie.vote_average * 10}%</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres?.map(genre => genre.name).join(' ')}</p>\n        </div>\n      </div>\n      <hr style={{ borderColor: 'gray', borderWidth: '2px' }} />\n      <div style={{ marginBottom: '25px' }}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link\n              to={`/movies/${movieId}/cast`}\n              onClick={() => setSection('cast')}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/movies/${movieId}/reviews`}\n              onClick={() => setSection('reviews')}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <hr style={{ borderColor: 'gray', borderWidth: '2px' }} />\n      <div>\n        {section === 'cast' && <Cast />}\n        {section === 'reviews' && <Reviews />}\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const API_KEY = '6b6b4d8285a49ce753cf1ed9382a2a8f';\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    )\n      .then(response => response.json())\n      .then(data => setReviews(data.results))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      {reviews.map(review => (\n        <div key={review.id}>\n          <h2>{review.author}</h2>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string,\n    })\n  ),\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetch","concat","then","response","json","data","catch","error","console","_jsxs","children","_jsx","map","member","src","profile_path","alt","name","style","width","character","cast_id","_movie$genres","movie","setMovie","_useState3","_useState4","section","setSection","padding","Link","to","display","marginBottom","poster_path","title","marginRight","marginTop","fontWeight","Date","release_date","getFullYear","vote_average","overview","genres","genre","join","borderColor","borderWidth","onClick","Cast","Reviews","reviews","setReviews","results","review","author","content","id"],"sourceRoot":""}