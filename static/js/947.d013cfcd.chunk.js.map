{"version":3,"file":"static/js/947.d013cfcd.chunk.js","mappings":"6LAiEA,UA7DA,WAAyB,IAADA,EACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAUtB,OAPAI,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAADC,OAAuCV,EAAO,aAAAU,OAHrC,qCAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIP,EAASO,EAAK,IAC3BC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,EAAM,GAClD,GAAG,CAAChB,KAGFkB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEC,IAAG,kCAAAb,OAAoCJ,EAAMkB,aAC7CC,IAAKnB,EAAMoB,SAEbR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEQ,WAAY,QAASN,SAAA,EACjCH,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAES,WAAY,QAASP,SAAA,CAC/Bf,EAAMoB,MAAM,KAAG,IAAIG,KAAKvB,EAAMwB,cAAcC,cAAc,QAE7Db,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,eAAkC,GAArBf,EAAM0B,aAAkB,QACxCV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIf,EAAM2B,YACVX,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SACe,QADftB,EACGO,EAAM4B,cAAM,IAAAnC,OAAA,EAAZA,EAAcoC,KAAI,SAAAC,GAAK,OACtBd,EAAAA,EAAAA,KAAA,MAAAD,SAAoBe,EAAMC,MAAjBD,EAAME,GAAqB,OAGxChB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAE,WAAA9B,OAAaV,EAAO,SAAQqB,SAAC,YAEvCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAE,WAAA9B,OAAaV,EAAO,YAAWqB,SAAC,sBAMpD,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const API_KEY = '6b6b4d8285a49ce753cf1ed9382a2a8f';\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.json())\n      .then(data => setMovie(data))\n      .catch(error => console.error('Error:', error));\n  }, [movieId]);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <div style={{ marginLeft: '20px' }}>\n        <h1 style={{ fontWeight: 'bold' }}>\n          {movie.title} ({new Date(movie.release_date).getFullYear()})\n        </h1>\n        <p>User Score: {movie.vote_average * 10}%</p>\n        <h2>Overview</h2>\n        <p>{movie.overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {movie.genres?.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;\n"],"names":["_movie$genres","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","fetch","concat","then","response","json","data","catch","error","console","_jsxs","style","display","children","_jsx","src","poster_path","alt","title","marginLeft","fontWeight","Date","release_date","getFullYear","vote_average","overview","genres","map","genre","name","id","Link","to"],"sourceRoot":""}